services:
    db:
        image: mysql:8.0
        restart: unless-stopped
        ports: 
            - "${MYSQL_PORT}:3306"
        command: --default-authentication-plugin=mysql_native_password
        environment:
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        volumes:
            - ./dump:/docker-entrypoint-initdb.d:ro
            - ./conf:/etc/mysql/conf.d:ro
            - persistent:/var/lib/mysql
        networks:
            - backend
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
            interval: 10s
            timeout: 5s
            retries: 5

    www:
        build: 
            context: .
            args:
                PHP_MEMORY_LIMIT: ${PHP_MEMORY_LIMIT}
                PHP_MAX_EXECUTION_TIME: ${PHP_MAX_EXECUTION_TIME}
                PHP_UPLOAD_MAX_FILESIZE: ${PHP_UPLOAD_MAX_FILESIZE}
                PHP_POST_MAX_SIZE: ${PHP_POST_MAX_SIZE}
        restart: unless-stopped
        environment:
            MYSQL_HOST: ${MYSQL_HOST}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
        ports: 
            - "${APACHE_PORT}:80"
        volumes:
            - ./www:/var/www/html
        depends_on:
            - db
        networks:
            - frontend
            - backend
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost"]
            interval: 10s
            timeout: 5s
            retries: 5

    wordpress:
        image: wordpress:6.8.1-php8.2-apache
        restart: unless-stopped
        environment:
            WORDPRESS_DB_HOST: ${MYSQL_HOST}:3306
            WORDPRESS_DB_NAME: ${MYSQL_DATABASE}
            WORDPRESS_DB_USER: ${MYSQL_USER}
            WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
        volumes:
            - wordpress_data:/var/www/html
            - ./config/php/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini:ro
        depends_on:
            - db
        networks:
            - frontend
            - backend
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost"]
            interval: 10s
            timeout: 5s
            retries: 5

    nginx:
        image: nginx:alpine
        restart: unless-stopped
        volumes:
            - ./nginx.conf:/etc/nginx/nginx.conf:ro
        depends_on:
            - wordpress
            - phpmyadmin
        networks:
            - frontend
            - backend
        healthcheck:
            test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8000/health"]
            interval: 10s
            timeout: 5s
            retries: 5

    tailscale:
        image: tailscale/tailscale:latest
        container_name: ${COMPOSE_PROJECT_NAME}_tailscale
        restart: unless-stopped
        environment:
            - TS_AUTHKEY=${TS_AUTHKEY}
            - TS_HOSTNAME=${TS_HOSTNAME}
            - TS_STATE_DIR=/var/lib/tailscale
            - TS_PRIVACY=${TS_PRIVACY}
        volumes:
            - tailscale_data:/var/lib/tailscale
            - /dev/net/tun:/dev/net/tun
            - ./tailscale-startup.sh:/tailscale-startup.sh:ro
        cap_add:
            - NET_ADMIN
            - SYS_MODULE
        depends_on:
            - nginx
        networks:
            - frontend
        command: sh /tailscale-startup.sh

    phpmyadmin:
        image: phpmyadmin/phpmyadmin:latest
        restart: unless-stopped
        environment:
            PMA_HOST: ${PMA_HOST}
            PMA_ARBITRARY: 1
            UPLOAD_LIMIT: ${PHP_UPLOAD_MAX_FILESIZE}
            # Remove PMA_USER and PMA_PASSWORD to enable login prompt
        volumes:
            - ./config/phpmyadmin/config.user.inc.php:/etc/phpmyadmin/config.user.inc.php:ro
        ports:
            - "${PHPMYADMIN_PORT}:80"
        depends_on:
            - db
        networks:
            - frontend
            - backend
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost"]
            interval: 10s
            timeout: 5s
            retries: 5

networks:
    frontend:
        driver: bridge
    backend:
        driver: bridge
        internal: true

volumes:
    persistent:
    wordpress_data:
    tailscale_data:
